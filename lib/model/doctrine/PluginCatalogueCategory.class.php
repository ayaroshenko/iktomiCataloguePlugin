<?php

/**
 * PluginCatalogueCategory
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginCatalogueCategory extends BaseCatalogueCategory
{
  public function getIndentedName()
  {
    return str_repeat('-', $this->getLevel()) . ' ' . $this['name'];
  }

  public function insertInto($categoryId)
  {
    $target = $this->getTable()->findOneById($categoryId);

    if ($result = $this->getNode()->moveAsFirstChildOf($target))
    {
      $this['parent_id'] = $target['id'];
      $this->save();
    }

    return $result;
  }

  public function moveAfter($categoryId)
  {
    $target = $this->getTable()->findOneById($categoryId);

    if ($result = $this->getNode()->moveAsNextSiblingOf($target))
    {
      $this['parent_id'] = $target['id'];
      $this->save();
    }

    return $result;
  }

  public function getCategoryPath($fields = array( ))
  {
    if (empty($fields))
    {
      $fields = array( 'name', 'id' );
    }

    $path = array( );
    $ancestors = $this->getNode()->getAncestors();

    if ($ancestors)
    {
      foreach ($ancestors as $ancestor)
      {
        $pathItem = array( );
        foreach ($fields as $field)
        {
          $pathItem[$field] = $ancestor[$field];
        }
        $path[] = $pathItem;
      }
    }

    return $path;
  }

  public function getListWithDescendants()
  {
    $categoryIds = array( $this['id'] );
    $descendants = $this->getNode()->getDescendants();
    if ($descendants)
    {
      foreach ($descendants as $descendant)
      {
        $categoryIds[] = $descendant['id'];
      }
    }

    return $categoryIds;
  }
}